{"ast":null,"code":"var _jsxFileName = \"/Users/gingerbread/Documents/backand 1/O\\u0308vningsProjekt/testprojekt/src/frontend/components/form/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form(_ref) {\n  _s();\n  let {\n    submitCallback,\n    title,\n    linkTo\n  } = _ref;\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [callbackResult, setCallbackResult] = useState(\"\");\n  async function submitHandler(event) {\n    event.preventDefault();\n    const res = await submitCallback(inputName, inputPassword);\n    setCallbackResult(res);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"username\",\n          value: inputName,\n          onChange: event => setInputName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: inputPassword,\n          onChange: event => setInputPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          title: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: linkTo,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            title: \"To Register\",\n            className: \"button registerButton\",\n            children: \"to register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"callBackResult\",\n      children: callbackResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"VXgjuPwY3L5KhLhg+tMnGyRlZrU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Link","Button","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_ref","_s","submitCallback","title","linkTo","inputName","setInputName","inputPassword","setInputPassword","callbackResult","setCallbackResult","submitHandler","event","preventDefault","res","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/Users/gingerbread/Documents/backand 1/OÌˆvningsProjekt/testprojekt/src/frontend/components/form/Form.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport \"./form.css\";\n\nfunction Form({ submitCallback, title, linkTo }) {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [callbackResult, setCallbackResult] = useState(\"\");\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    const res = await submitCallback(inputName, inputPassword);\n    setCallbackResult(res);\n  }\n\n  return (\n    <>\n      <div className=\"formContainer\">\n        <form onSubmit={submitHandler}>\n          <h1>{title}</h1>\n          <label>Username</label>\n          <Input\n            type=\"username\"\n            value={inputName}\n            onChange={(event) => setInputName(event.target.value)}\n          />\n          <label>Password</label>\n          <Input\n            type=\"password\"\n            value={inputPassword}\n            onChange={(event) => setInputPassword(event.target.value)}\n          />\n          <Button type=\"submit\" title=\"Login\" />\n          <Link to={linkTo}>\n            <button\n              type=\"submit\"\n              title=\"To Register\"\n              className=\"button registerButton\"\n            >\n              to register\n            </button>\n          </Link>\n        </form>\n      </div>\n      <p className=\"callBackResult\">{callbackResult}</p>\n    </>\n  );\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}